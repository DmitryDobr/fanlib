<?php

// Получить 5 последних работ автора
function GetAuthorWorksLast($db, $UserID){
    $querry = 'SELECT work_id FROM "public"."WORK" WHERE user_id = '.$UserID.'ORDER BY update_time DESC LIMIT 5';
    $result = pg_query($db, $querry);

    // echo pg_num_rows($result);

    if (pg_num_rows($result) > 0)
    {
        $result_list = [];

        while ($answer = pg_fetch_assoc($result)) {
            $result_list[] = $answer;
        }
	
		echo json_encode($result_list);
    }
    else {
		$res = [
			"message" => "No post"
		];
		
		echo json_encode($res);
    }
}

// проверить "Принадлежит" ли работа данному автору
function CheckWorkAuthor($db, $UserID, $WorkId) {
    $querry = 'SELECT about, "WorkName", remark FROM "public"."WORK" WHERE user_id = '.$UserID.' AND work_id = '.$WorkId.'';
    $result = pg_query($db, $querry);

    if (pg_num_rows($result) > 0) {
        return true;
    }
    else {
        return false;
    }
}

// то же самое, но для возвращения ответа на клиент
function WorkAuthorExist($db, $UserID, $WorkId) {
    $querry = 'SELECT about, "WorkName", remark FROM "public"."WORK" WHERE user_id = '.$UserID.' AND work_id = '.$WorkId.'';
    $result = pg_query($db, $querry);

    if (pg_num_rows($result) > 0) {
        $result_list = [];

        while ($answer = pg_fetch_assoc($result)) {
            $result_list[] = $answer;
        }
	
		echo json_encode($result_list);
    }
    else {
        http_response_code(403);

        $res = [
			"status" => false,
			"message" => "Cant get user to edit"
		];
		
		echo json_encode($res);
    }
}


// обновление информации о работе (не используется с 06.12)
function UpdateWork($db, $params) {

    if (CheckWorkAuthor($db, $params[0], $params[1])) {
        // UPDATE разрешен
        // date_default_timezone_set('UTC');
        // $today = date('j-m-y');

        $query = 'UPDATE "public"."WORK" SET "about" = $1, "remark" = $2, "WorkName" = $3, "update_time" = $4 WHERE work_id = '.$params[1].'';
        $result = pg_query_params($db, $query, array($params[2], $params[4], $params[3], date('j-m-y')));

        $state = pg_result_error($result);  //  отлов ошибок выполнения запроса

        if (empty($state)) {
            $result_list = ["status" => true,
                            "message" => "Update complete"];
            echo json_encode($result_list);
        }
        else {
            $result_list = ["status" => false,
                            "message" => $state];
            echo json_encode($result_list);
        }
    }
    else {
        // UPDATE НЕ разрешен
        http_response_code(403);

        $res = [
			"status" => false,
			"message" => "Cant get user to edit"
		];
		
		echo json_encode($res);
    }
}

// обновление информации о главе (не используется с 06.12)
function UpdateChapter($db, $params, $text) {
    // $params[]
    // [0] - user_id
    // [1] - work_id
    // [2] - chapter_id
    // [3] - chapter_name

    $text = json_decode(file_get_contents('php://input'), true)[0]["chapter_text"];;

    if (CheckWorkAuthor($db, $params['user_id'], $params['work_id']))
    {
        $querry = 'UPDATE "public"."CHAPTER" SET "chapter_text" = $1, "chapter_name" = $2 WHERE "chapter_id" = '.$params['chapter_id'].'';
        $result = pg_query_params($db, $querry, array($text, $params['chapter_name']));

        $state = pg_result_error($result);  //  отлов ошибок выполнения запроса

        if (empty($state)) {
            $result_list = ["status" => true,
                            "message" => "Update complete"];
            echo json_encode($result_list);
        }
        else {
            $result_list = ["status" => false,
                            "message" => $state];
            echo json_encode($result_list);
        }
    }
    else {
        http_response_code(403);

        $res = [
			"status" => false,
			"message" => "Cant get user to edit"
		];
		
		echo json_encode($res);
    }
}

// добавление главы в работу (не используется с 06.12)
function AddChapter($db, $params) {
    // $params[]
    // [0] - user_id
    // [1] - work_id

    if (CheckWorkAuthor($db, $params['user_id'], $params['work_id']))
    {
        $result = pg_query($db, 'SELECT chapter_id FROM "public"."CHAPTER" ORDER BY chapter_id DESC LIMIT 1');
        $new_id = pg_fetch_assoc($result)['chapter_id'] + 1;


        $querry = 'INSERT INTO "public"."CHAPTER" (chapter_id, work_id, chapter_name) VALUES ($1, $2, $3)';
    
        $result = pg_query_params($db, $querry, array($new_id, $params['work_id'], "Новая глава"));



        $state = pg_result_error($result);  //  отлов ошибок выполнения запроса

        if (empty($state))
        {
            $result_list = ["status" => true,
                            "message" => "Add chapter complete"];
            echo json_encode($result_list);
        }
        else
        {
            $result_list = ["status" => false,
                            "Message" => $state];
            echo json_encode($result_list);
        }
    }
    else {
        http_response_code(403);

        $res = [
			"status" => false,
			"message" => "Cant get user to edit"
		];
		
		echo json_encode($res);
    }
}


?>